plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.liquibase.gradle' version '2.0.4'
    id "com.github.node-gradle.node" version "7.0.0"
}
apply plugin: "org.liquibase.gradle"

group = 'com.scand'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

node {
    version = '14.17.1'
    npmVersion = '6.14.13'
    download = true
}
//processResources.dependsOn copyFrontend
repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation 'junit:junit:4.13.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.0.4'
    implementation 'org.springframework.security:spring-security-test:6.0.2'
    implementation 'org.apache.pdfbox:pdfbox:2.0.25'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.liquibase:liquibase-core:4.23.0'
    implementation 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
    implementation 'org.springframework.security:spring-security-config:6.1.1'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.simplejavamail:simple-java-mail:8.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2'
}

liquibase {
    activities {
        main {
            changeLogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
            url 'jdbc:postgresql://localhost:6432/postgres'
            username 'postgres'
            password 'root'
        }
    }
}

test {
    maxParallelForks = 1
}

tasks.named('test') {
    useJUnitPlatform()
}


